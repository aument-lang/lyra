#pragma once
enum lyra_insn_type {
LYRA_OP_MOV_VAR,
LYRA_OP_MOV_I32,
LYRA_OP_MOV_BOOL,
LYRA_OP_MOV_F64,
LYRA_OP_ENSURE_I32,
LYRA_OP_ENSURE_F64,
LYRA_OP_MUL_VAR,
LYRA_OP_MUL_I32_IMM,
LYRA_OP_MUL_F64_IMM,
LYRA_OP_MUL_NUM_I32_IMM,
LYRA_OP_MUL_NUM_F64_IMM,
LYRA_OP_DIV_VAR,
LYRA_OP_DIV_I32_IMM,
LYRA_OP_DIV_F64_IMM,
LYRA_OP_ADD_VAR,
LYRA_OP_ADD_I32_IMM,
LYRA_OP_ADD_F64_IMM,
LYRA_OP_ADD_NUM_I32_IMM,
LYRA_OP_ADD_NUM_F64_IMM,
LYRA_OP_SUB_VAR,
LYRA_OP_SUB_I32_IMM,
LYRA_OP_SUB_F64_IMM,
LYRA_OP_SUB_NUM_I32_IMM,
LYRA_OP_SUB_NUM_F64_IMM,
LYRA_OP_BOR_I32_IMM,
LYRA_OP_BXOR_I32_IMM,
LYRA_OP_BAND_I32_IMM,
LYRA_OP_BSHL_I32_IMM,
LYRA_OP_BSHR_I32_IMM,
LYRA_OP_MOD_I32_IMM,
LYRA_OP_EQ_VAR,
LYRA_OP_EQ_I32_IMM,
LYRA_OP_EQ_F64_IMM,
LYRA_OP_EQ_NUM_I32_IMM,
LYRA_OP_EQ_NUM_F64_IMM,
LYRA_OP_NEQ_VAR,
LYRA_OP_NEQ_I32_IMM,
LYRA_OP_NEQ_F64_IMM,
LYRA_OP_NEQ_NUM_I32_IMM,
LYRA_OP_NEQ_NUM_F64_IMM,
LYRA_OP_LT_VAR,
LYRA_OP_LT_I32_IMM,
LYRA_OP_LT_F64_IMM,
LYRA_OP_LT_NUM_I32_IMM,
LYRA_OP_LT_NUM_F64_IMM,
LYRA_OP_GT_VAR,
LYRA_OP_GT_I32_IMM,
LYRA_OP_GT_F64_IMM,
LYRA_OP_GT_NUM_I32_IMM,
LYRA_OP_GT_NUM_F64_IMM,
LYRA_OP_LEQ_VAR,
LYRA_OP_LEQ_I32_IMM,
LYRA_OP_LEQ_F64_IMM,
LYRA_OP_LEQ_NUM_I32_IMM,
LYRA_OP_LEQ_NUM_F64_IMM,
LYRA_OP_GEQ_VAR,
LYRA_OP_GEQ_I32_IMM,
LYRA_OP_GEQ_F64_IMM,
LYRA_OP_GEQ_NUM_I32_IMM,
LYRA_OP_GEQ_NUM_F64_IMM,
LYRA_OP_LOAD_ARG,
};
static inline int lyra_insn_type_has_left_var(enum lyra_insn_type type) {
if(type == LYRA_OP_MOV_VAR) return 1;
if(type == LYRA_OP_ENSURE_I32) return 1;
if(type == LYRA_OP_ENSURE_F64) return 1;
if(type == LYRA_OP_MUL_VAR) return 1;
if(type == LYRA_OP_MUL_I32_IMM) return 1;
if(type == LYRA_OP_MUL_F64_IMM) return 1;
if(type == LYRA_OP_MUL_NUM_I32_IMM) return 1;
if(type == LYRA_OP_MUL_NUM_F64_IMM) return 1;
if(type == LYRA_OP_DIV_VAR) return 1;
if(type == LYRA_OP_DIV_I32_IMM) return 1;
if(type == LYRA_OP_DIV_F64_IMM) return 1;
if(type == LYRA_OP_ADD_VAR) return 1;
if(type == LYRA_OP_ADD_I32_IMM) return 1;
if(type == LYRA_OP_ADD_F64_IMM) return 1;
if(type == LYRA_OP_ADD_NUM_I32_IMM) return 1;
if(type == LYRA_OP_ADD_NUM_F64_IMM) return 1;
if(type == LYRA_OP_SUB_VAR) return 1;
if(type == LYRA_OP_SUB_I32_IMM) return 1;
if(type == LYRA_OP_SUB_F64_IMM) return 1;
if(type == LYRA_OP_SUB_NUM_I32_IMM) return 1;
if(type == LYRA_OP_SUB_NUM_F64_IMM) return 1;
if(type == LYRA_OP_BOR_I32_IMM) return 1;
if(type == LYRA_OP_BXOR_I32_IMM) return 1;
if(type == LYRA_OP_BAND_I32_IMM) return 1;
if(type == LYRA_OP_BSHL_I32_IMM) return 1;
if(type == LYRA_OP_BSHR_I32_IMM) return 1;
if(type == LYRA_OP_MOD_I32_IMM) return 1;
if(type == LYRA_OP_EQ_VAR) return 1;
if(type == LYRA_OP_EQ_I32_IMM) return 1;
if(type == LYRA_OP_EQ_F64_IMM) return 1;
if(type == LYRA_OP_EQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_EQ_NUM_F64_IMM) return 1;
if(type == LYRA_OP_NEQ_VAR) return 1;
if(type == LYRA_OP_NEQ_I32_IMM) return 1;
if(type == LYRA_OP_NEQ_F64_IMM) return 1;
if(type == LYRA_OP_NEQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_NEQ_NUM_F64_IMM) return 1;
if(type == LYRA_OP_LT_VAR) return 1;
if(type == LYRA_OP_LT_I32_IMM) return 1;
if(type == LYRA_OP_LT_F64_IMM) return 1;
if(type == LYRA_OP_LT_NUM_I32_IMM) return 1;
if(type == LYRA_OP_LT_NUM_F64_IMM) return 1;
if(type == LYRA_OP_GT_VAR) return 1;
if(type == LYRA_OP_GT_I32_IMM) return 1;
if(type == LYRA_OP_GT_F64_IMM) return 1;
if(type == LYRA_OP_GT_NUM_I32_IMM) return 1;
if(type == LYRA_OP_GT_NUM_F64_IMM) return 1;
if(type == LYRA_OP_LEQ_VAR) return 1;
if(type == LYRA_OP_LEQ_I32_IMM) return 1;
if(type == LYRA_OP_LEQ_F64_IMM) return 1;
if(type == LYRA_OP_LEQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_LEQ_NUM_F64_IMM) return 1;
if(type == LYRA_OP_GEQ_VAR) return 1;
if(type == LYRA_OP_GEQ_I32_IMM) return 1;
if(type == LYRA_OP_GEQ_F64_IMM) return 1;
if(type == LYRA_OP_GEQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_GEQ_NUM_F64_IMM) return 1;
return 0;}
static inline int lyra_insn_type_has_right_var(enum lyra_insn_type type) {
if(type == LYRA_OP_MUL_VAR) return 1;
if(type == LYRA_OP_DIV_VAR) return 1;
if(type == LYRA_OP_ADD_VAR) return 1;
if(type == LYRA_OP_SUB_VAR) return 1;
if(type == LYRA_OP_EQ_VAR) return 1;
if(type == LYRA_OP_NEQ_VAR) return 1;
if(type == LYRA_OP_LT_VAR) return 1;
if(type == LYRA_OP_GT_VAR) return 1;
if(type == LYRA_OP_LEQ_VAR) return 1;
if(type == LYRA_OP_GEQ_VAR) return 1;
return 0;}
static inline int lyra_insn_type_has_dest(enum lyra_insn_type type) {
if(type == LYRA_OP_MOV_VAR) return 1;
if(type == LYRA_OP_MOV_I32) return 1;
if(type == LYRA_OP_MOV_BOOL) return 1;
if(type == LYRA_OP_MOV_F64) return 1;
if(type == LYRA_OP_ENSURE_I32) return 1;
if(type == LYRA_OP_ENSURE_F64) return 1;
if(type == LYRA_OP_MUL_VAR) return 1;
if(type == LYRA_OP_MUL_I32_IMM) return 1;
if(type == LYRA_OP_MUL_F64_IMM) return 1;
if(type == LYRA_OP_MUL_NUM_I32_IMM) return 1;
if(type == LYRA_OP_MUL_NUM_F64_IMM) return 1;
if(type == LYRA_OP_DIV_VAR) return 1;
if(type == LYRA_OP_DIV_I32_IMM) return 1;
if(type == LYRA_OP_DIV_F64_IMM) return 1;
if(type == LYRA_OP_ADD_VAR) return 1;
if(type == LYRA_OP_ADD_I32_IMM) return 1;
if(type == LYRA_OP_ADD_F64_IMM) return 1;
if(type == LYRA_OP_ADD_NUM_I32_IMM) return 1;
if(type == LYRA_OP_ADD_NUM_F64_IMM) return 1;
if(type == LYRA_OP_SUB_VAR) return 1;
if(type == LYRA_OP_SUB_I32_IMM) return 1;
if(type == LYRA_OP_SUB_F64_IMM) return 1;
if(type == LYRA_OP_SUB_NUM_I32_IMM) return 1;
if(type == LYRA_OP_SUB_NUM_F64_IMM) return 1;
if(type == LYRA_OP_BOR_I32_IMM) return 1;
if(type == LYRA_OP_BXOR_I32_IMM) return 1;
if(type == LYRA_OP_BAND_I32_IMM) return 1;
if(type == LYRA_OP_BSHL_I32_IMM) return 1;
if(type == LYRA_OP_BSHR_I32_IMM) return 1;
if(type == LYRA_OP_MOD_I32_IMM) return 1;
if(type == LYRA_OP_EQ_VAR) return 1;
if(type == LYRA_OP_EQ_I32_IMM) return 1;
if(type == LYRA_OP_EQ_F64_IMM) return 1;
if(type == LYRA_OP_EQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_EQ_NUM_F64_IMM) return 1;
if(type == LYRA_OP_NEQ_VAR) return 1;
if(type == LYRA_OP_NEQ_I32_IMM) return 1;
if(type == LYRA_OP_NEQ_F64_IMM) return 1;
if(type == LYRA_OP_NEQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_NEQ_NUM_F64_IMM) return 1;
if(type == LYRA_OP_LT_VAR) return 1;
if(type == LYRA_OP_LT_I32_IMM) return 1;
if(type == LYRA_OP_LT_F64_IMM) return 1;
if(type == LYRA_OP_LT_NUM_I32_IMM) return 1;
if(type == LYRA_OP_LT_NUM_F64_IMM) return 1;
if(type == LYRA_OP_GT_VAR) return 1;
if(type == LYRA_OP_GT_I32_IMM) return 1;
if(type == LYRA_OP_GT_F64_IMM) return 1;
if(type == LYRA_OP_GT_NUM_I32_IMM) return 1;
if(type == LYRA_OP_GT_NUM_F64_IMM) return 1;
if(type == LYRA_OP_LEQ_VAR) return 1;
if(type == LYRA_OP_LEQ_I32_IMM) return 1;
if(type == LYRA_OP_LEQ_F64_IMM) return 1;
if(type == LYRA_OP_LEQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_LEQ_NUM_F64_IMM) return 1;
if(type == LYRA_OP_GEQ_VAR) return 1;
if(type == LYRA_OP_GEQ_I32_IMM) return 1;
if(type == LYRA_OP_GEQ_F64_IMM) return 1;
if(type == LYRA_OP_GEQ_NUM_I32_IMM) return 1;
if(type == LYRA_OP_GEQ_NUM_F64_IMM) return 1;
if(type == LYRA_OP_LOAD_ARG) return 1;
return 0;}
static inline int lyra_insn_type_has_side_effect(enum lyra_insn_type type) {
return 0;}
